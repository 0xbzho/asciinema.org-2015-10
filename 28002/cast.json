{
  "version": 1,
  "width": 200,
  "height": 55,
  "duration": 43.447309,
  "command": "./demo-otto-infra.sh",
  "title": "",
  "env": {
    "TERM": "xterm-256color",
    "SHELL": "/bin/bash"
  },
  "stdout": [
    [
      0.017043,
      "\u001b[1m\u001b[34mGenerating discovery-url...\u001b(B\u001b[m\r\n"
    ],
    [
      0.283478,
      "Wrote https://discovery.etcd.io/76485919568ca1b29a4e76bbd8e25d32 to contrib/coreos/user-data\r\n"
    ],
    [
      0.009775,
      "Identity added: /Users/sethgoings/.ssh/deis-test (/Users/sethgoings/.ssh/deis-test)\r\n"
    ],
    [
      0.000640,
      "\u001b[1m\u001b[34mExporting DO_TOKEN + DO_SSH_FINGERPRINT...\u001b(B\u001b[m\r\n"
    ],
    [
      0.005919,
      "\u001b[1m\u001b[34mRunning \u001b[1m\u001b[37motto infra\u001b[1m\u001b[34m...\u001b(B\u001b[m\r\n"
    ],
    [
      0.014830,
      "\u001b[0m\u001b[1m==\u003e Detecting infrastructure credentials for: digitalocean (digitalocean)\u001b[0m\r\n"
    ],
    [
      0.000049,
      "\u001b[0m    Existing infrastructure credentials were not found! Otto will\r\n"
    ],
    [
      0.000050,
      "    now ask you for infrastructure credentials. These will be encrypted\r\n"
    ],
    [
      0.000102,
      "    and saved on disk so this doesn't need to be repeated.\r\n"
    ],
    [
      0.000223,
      "    \r\n    IMPORTANT: If you're re-entering new credentials, make sure the\r\n    credentials are for the same account, otherwise you may lose\r\n    access to your existing infrastructure Otto set up.\r\n    \u001b[0m\r\n"
    ],
    [
      0.000004,
      "\u001b[0m\u001b[0m\u001b[1mPassword for Encrypting Credentials\u001b[0m\r\n"
    ],
    [
      0.000064,
      "  This password will be used to encrypt and save the credentials so they\r\n"
    ],
    [
      0.000025,
      "  don't need to be repeated multiple times.\r\n\r\n"
    ],
    [
      0.005056,
      "  \u001b[1mEnter a value:\u001b[0m \u001b[0m"
    ],
    [
      1.000000,
      "\r\n"
    ],
    [
      0.059614,
      "\u001b[0m\u001b[1m==\u003e Building main infrastructure...\u001b[0m\r\n"
    ],
    [
      0.093987,
      "\u001b[0m\u001b[1m==\u003e Executing Terraform to manage infrastructure...\u001b[0m\r\n"
    ],
    [
      0.000037,
      "\u001b[0m    Raw Terraform output will begin streaming in below. Otto\r\n"
    ],
    [
      0.000200,
      "    does not create this output. It is mirrored directly from\r\n"
    ],
    [
      0.000068,
      "    Terraform while the infrastructure is being created.\r\n"
    ],
    [
      0.000003,
      "    \r\n"
    ],
    [
      0.000089,
      "    Terraform may ask for input. For infrastructure provider\r\n"
    ],
    [
      0.000076,
      "    credentials, be sure to enter the same credentials\r\n"
    ],
    [
      0.000058,
      "    consistently within the same Otto environment.\r\n"
    ],
    [
      0.000010,
      "    \u001b[0m\r\n"
    ],
    [
      0.107915,
      "\u001b[0m\u001b[1mdigitalocean_droplet.deis.0: Creating...\u001b[21m\r\n"
    ],
    [
      0.000032,
      "  backups:              \"\" =\u003e \"0\"\r\n"
    ],
    [
      0.000068,
      "  image:                \"\" =\u003e \"coreos-stable\"\r\n"
    ],
    [
      0.000058,
      "  ipv4_address:         \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000048,
      "  ipv4_address_private: \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000053,
      "  ipv6:                 \"\" =\u003e \"0\"\r\n"
    ],
    [
      0.000072,
      "  ipv6_address:         \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000069,
      "  ipv6_address_private: \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000104,
      "  locked:               \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000087,
      "  name:                 \"\" =\u003e \"deis-sgoings-1\"\r\n"
    ],
    [
      0.000044,
      "  private_networking:   \"\" =\u003e \"1\"\r\n"
    ],
    [
      0.000148,
      "  region:               \"\" =\u003e \"nyc1\"\r\n"
    ],
    [
      0.000033,
      "  size:                 \"\" =\u003e \"8gb\"\r\n"
    ],
    [
      0.000043,
      "  ssh_keys.#:           \"\" =\u003e \"1\"\r\n"
    ],
    [
      0.000121,
      "  ssh_keys.0:           \"\" =\u003e \"02:81:cf:41:d0:7e:c2:4f:af:62:02:96:f2:11:59:b9\"\r\n"
    ],
    [
      0.000048,
      "  status:               \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.022422,
      "  user_data:            \"\" =\u003e \"#cloud-config\\n\\ncoreos:\\n  etcd2:\\n    # generate a new token for each unique cluster from https://discovery.etcd.io/new\\n    discovery: https://discovery.etcd.io/76485919568ca1b29a4e76bbd8e25d32\\n    # multi-region and multi-cloud deployments need to use $public_ipv4\\n    advertise-client-urls: http://$private_ipv4:2379\\n    initial-advertise-peer-urls: http://$private_ipv4:2380\\n    # listen on both the official ports and the legacy ports\\n    # legacy ports can be omitted if your application doesn't depend on them\\n    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001\\n    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001\\n    data-dir: /var/lib/etcd2\\n  fleet:\\n    public-ip: $public_ipv4\\n    metadata: controlPlane=true,dataPlane=true,routerMesh=true\\n  update:\\n    reboot-strategy: \\\"off\\\"\\n  units:\\n    - name: etcd.service\\n      mask: true\\n    - name: etcd2.service\\n      command: start\\n    - name: fleet.service\\n      command: start\\n  "
    ],
    [
      0.000035,
      "  - name: docker-tcp.socket\\n      command: start\\n      enable: true\\n      content: |\\n        [Unit]\\n        Description=Docker Socket for the API\\n\\n        [Socket]\\n        ListenStream=2375\\n        Service=docker.service\\n        BindIPv6Only=both\\n\\n        [Install]\\n        WantedBy=sockets.target\\n    - name: update-engine.service\\n      command: stop\\n      enable: false\\n    - name: docker.service\\n      drop-ins:\\n      - name: 50-insecure-registry.conf\\n        content: |\\n          [Service]\\n          Environment=\\\"DOCKER_OPTS=--insecure-registry 10.0.0.0/8 --insecure-registry 172.16.0.0/12 --insecure-registry 192.168.0.0/16 --insecure-registry 100.64.0.0/10\\\"\\n    - name: flanneld.service\\n      drop-ins:\\n      - name: 50-network-config.conf\\n        content: |\\n          [Service]\\n          ExecStartPre=/usr/bin/etcdctl mk /coreos.com/network/config '{\\\"Network\\\": \\\"10.244.0.0/16\\\", \\\"SubnetLen\\\": 24, \\\"SubnetMin\\\": \\\"10.244.0.0\\\", \\\"Backend\\\": {\\\"Type\\\": \\\"vxlan\\\"}}'\\n    - name: grace"
    ],
    [
      0.000015,
      "ful-deis-shutdown.service\\n      content: |\\n        [Unit]\\n        Description=Clean up\\n        DefaultDependencies=no\\n        After=fleet.service etcd2.service docker.service docker.socket deis-store-admin.service deis-store-daemon.service deis-store-volume.service deis-store-monitor.service\\n        Requires=fleet.service etcd2.service deis-store-admin.service deis-store-daemon.service deis-store-volume.service docker.service docker.socket deis-store-monitor.service\\n\\n        [Install]\\n        WantedBy=shutdown.target halt.target reboot.target\\n\\n        [Service]\\n        ExecStop=/opt/bin/graceful-shutdown.sh --really\\n        Type=oneshot\\n        TimeoutSec=1200\\n        RemainAfterExit=yes\\n    - name: install-deisctl.service\\n      command: start\\n      content: |\\n        [Unit]\\n        Description=Install deisctl utility\\n        ConditionPathExists=!/opt/bin/deisctl\\n\\n        [Service]\\n        Type=oneshot\\n        ExecStart=/usr/bin/sh -c 'curl -sSL --retry 5 --retry-delay 2 http://deis.i"
    ],
    [
      0.000161,
      "o/deisctl/install.sh | sh -s 1.11.1'\\n    - name: debug-etcd.service\\n      content: |\\n        [Unit]\\n        Description=etcd debugging service\\n\\n        [Service]\\n        ExecStartPre=/usr/bin/curl -sSL -o /opt/bin/jq http://stedolan.github.io/jq/download/linux64/jq\\n        ExecStartPre=/usr/bin/chmod +x /opt/bin/jq\\n        ExecStart=/usr/bin/bash -c \\\"while true; do curl -sL http://127.0.0.1:4001/v2/stats/self | /opt/bin/jq . ; sleep 1 ; done\\\"\\n    - name: increase-nf_conntrack-connections.service\\n      command: start\\n      content: |\\n        [Unit]\\n        Description=Increase the number of connections in nf_conntrack. default is 65536\\n\\n        [Service]\\n        Type=oneshot\\n        ExecStartPre=/usr/sbin/modprobe nf_conntrack\\n        ExecStart=/bin/sh -c \\\"sysctl -w net.netfilter.nf_conntrack_max=262144\\\"\\nwrite_files:\\n  - path: /etc/deis-release\\n    content: |\\n      DEIS_RELEASE=v1.11.1\\n  - path: /etc/motd\\n    content: \\\" \\\\e[31m* *    \\\\e[34m*   \\\\e[32m*****    \\\\e[39mddddd   eeeee"
    ],
    [
      0.000069,
      "ee iiiiiii   ssss\\\\n\\\\e[31m*   *  \\\\e[34m* *  \\\\e[32m*   *     \\\\e[39md   d   e    e    i     s    s\\\\n \\\\e[31m* *  \\\\e[34m***** \\\\e[32m*****     \\\\e[39md    d  e         i    s\\\\n\\\\e[32m*****  \\\\e[31m* *    \\\\e[34m*       \\\\e[39md     d e         i     s\\\\n\\\\e[32m*   * \\\\e[31m*   *  \\\\e[34m* *      \\\\e[39md     d eee       i      sss\\\\n\\\\e[32m*****  \\\\e[31m* *  \\\\e[34m*****     \\\\e[39md     d e         i         s\\\\n  \\\\e[34m*   \\\\e[32m*****  \\\\e[31m* *      \\\\e[39md    d  e         i          s\\\\n \\\\e[34m* *  \\\\e[32m*   * \\\\e[31m*   *     \\\\e[39md   d   e    e    i    s    s\\\\n\\\\e[34m***** \\\\e[32m*****  \\\\e[31m* *     \\\\e[39mddddd   eeeeeee iiiiiii  ssss\\\\n\\\\n\\\\e[39mWelcome to Deis\\\\t\\\\t\\\\tPowered by Core\\\\e[38;5;45mO\\\\e[38;5;206mS\\\\e[39m\\\\n\\\"\\n  - path: /etc/profile.d/nse-function.sh\\n    permissions: '0755'\\n    content: |\\n      function nse() {\\n        docker exec -it $1 bash\\n      }\\n  - path: /run/deis/bin/get_image\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/env bash\\n      # usage: "
    ],
    [
      0.000077,
      "get_image \u003ccomponent_path\u003e\\n      IMAGE=`etcdctl get $1/image 2\u003e/dev/null`\\n\\n      # if no image was set in etcd, we use the default plus the release string\\n      if [ $? -ne 0 ]; then\\n        RELEASE=`etcdctl get /deis/platform/version 2\u003e/dev/null`\\n\\n        # if no release was set in etcd, use the default provisioned with the server\\n        if [ $? -ne 0 ]; then\\n          source /etc/deis-release\\n          RELEASE=$DEIS_RELEASE\\n        fi\\n\\n        IMAGE=$1:$RELEASE\\n      fi\\n\\n      # remove leading slash\\n      echo ${IMAGE#/}\\n  - path: /run/deis/bin/preseed\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/env bash\\n\\n      COMPONENTS=(builder controller database logger logspout publisher registry router store-daemon store-gateway store-metadata store-monitor)\\n      for c in \\\"${COMPONENTS[@]}\\\"; do\\n        image=`/run/deis/bin/get_image /deis/$c`\\n        docker history $image \u003e/dev/null 2\u003e\u00261 || docker pull $image\\n      done\\n  - path: /opt/bin/deis-debug-logs\\n    permissions: '0"
    ],
    [
      0.000072,
      "755'\\n    content: |\\n      #!/usr/bin/env bash\\n\\n      echo '--- VERSIONS ---'\\n      source /etc/os-release\\n      echo $PRETTY_NAME\\n      source /etc/deis-release\\n      echo \\\"Deis $DEIS_RELEASE\\\"\\n      etcd2 -version | head -n1\\n      fleet -version\\n      printf \\\"\\\\n\\\"\\n\\n      echo '--- SYSTEM STATUS ---'\\n      journalctl -n 50 -u etcd --no-pager\\n      journalctl -n 50 -u fleet --no-pager\\n      printf \\\"\\\\n\\\"\\n\\n      echo '--- DEIS STATUS ---'\\n      deisctl list\\n      etcdctl ls --recursive /deis\\n      printf \\\"\\\\n\\\"\\n  - path: /home/core/.toolboxrc\\n    owner: core\\n    content: |\\n      TOOLBOX_DOCKER_IMAGE=alpine\\n      TOOLBOX_DOCKER_TAG=3.1\\n      TOOLBOX_USER=root\\n  - path: /etc/environment_proxy\\n    owner: core\\n    content: |\\n      HTTP_PROXY=\\n      HTTPS_PROXY=\\n      ALL_PROXY=\\n      NO_PROXY=\\n      http_proxy=\\n      https_proxy=\\n      all_proxy=\\n      no_proxy=\\n  - path: /etc/systemd/coredump.conf\\n    content: |\\n      [Coredump]\\n      Storage=none\\n  - path: /opt/bin/"
    ],
    [
      0.000075,
      "graceful-shutdown.sh\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/bash\\n      if [ \\\"$1\\\" != '--really' ]; then\\n        echo \\\"command must be run as: $0 --really\\\"\\n        exit 1\\n      fi\\n      # procedure requires the store-admin\\n      ADMIN_RUNNING=$(docker inspect --format=\\\"{{ .State.Running }}\\\" deis-store-admin)\\n      if [ $? -eq 1 ] || [ \\\"$ADMIN_RUNNING\\\" == \\\"false\\\" ]; then\\n        echo \\\"deis-store-admin container is required for graceful shutdown\\\"\\n        exit 2\\n      fi\\n      set -e -x -o pipefail\\n      # determine osd id\\n      CURRENT_STATUS=$(docker exec deis-store-admin ceph health | awk '{print $1}')\\n      OSD_HOSTS=($(etcdctl ls /deis/store/hosts/| awk -F'/' '{print $5}'))\\n      for HOST in \\\"${OSD_HOSTS[@]}\\\"\\n      do\\n        PUBLIC_IP=$(fleetctl list-machines -fields=\\\"machine,ip\\\" -full -no-legend| grep `cat /etc/machine-id` | awk '{print $2}')\\n        if [ \\\"$HOST\\\" = \\\"$PUBLIC_IP\\\" ] ; then\\n          OSD_ID=$(etcdctl get /deis/store/osds/$PUBLIC_IP)\\n  "
    ],
    [
      0.000053,
      "        break\\n        fi\\n      done\\n      # if we own an osd and its healthy, try to gracefully remove it\\n      if [ ! -z \\\"$OSD_ID\\\" ] \u0026\u0026 [[ \\\"$CURRENT_STATUS\\\" == *\\\"HEALTH_OK\\\"* ]] \u0026\u0026 [ ${#OSD_HOSTS[@]} -gt \\\"3\\\" ]; then\\n        docker exec deis-store-admin ceph osd out $OSD_ID\\n        sleep 30\\n        TIMEWAITED=0\\n        until [[ $(docker exec deis-store-admin ceph health) == *\\\"HEALTH_OK\\\"* ]]\\n        do\\n          if [ $TIMEWAITED -gt \\\"1200\\\" ]\\n          then\\n            echo \\\"ceph graceful removal timeout exceeded\\\"\\n            break\\n          fi\\n          echo \\\"waiting\\\" \u0026\u0026 sleep 5\\n          TIMEWAITED=$((TIMEWAITED+5))\\n        done\\n        docker stop deis-store-daemon\\n        docker exec deis-store-admin ceph osd crush remove osd.$OSD_ID\\n        docker exec deis-store-admin ceph auth del osd.$OSD_ID\\n        docker exec deis-store-admin ceph osd rm $OSD_ID\\n        etcdctl rm /deis/store/osds/$PUBLIC_IP\\n        etcdctl rm /deis/store/hosts/$PUBLIC_IP \u0026\u0026 sleep 10\\n        # re"
    ],
    [
      0.000055,
      "move ceph mon\\n        docker stop deis-store-monitor || true\\n        docker exec deis-store-admin ceph mon remove `hostname -f` # fixme\\n        docker stop deis-store-metadata || true\\n      fi\\n\\n      # removing the node from etcd\\n      NODE=$(etcdctl member list | grep `cat /etc/machine-id` | cut -d ':' -f 1)\\n      etcdctl member remove $NODE\\n  - path: /opt/bin/wupiao\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/env bash\\n      # [w]ait [u]ntil [p]ort [i]s [a]ctually [o]pen\\n      [ -n \\\"$1\\\" ] \u0026\u0026 \\\\\\n        until curl -o /dev/null -sIf http://${1}; do \\\\\\n          sleep 1 \u0026\u0026 echo .;\\n        done;\\n      exit $?\\n  - path: /opt/bin/download-k8s-binary\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/env bash\\n      export K8S_VERSION=\\\"v1.0.1\\\"\\n      mkdir -p /opt/bin\\n      FILE=$1\\n      if [ ! -f /opt/bin/$FILE ]; then\\n        curl -sSL -o /opt/bin/$FILE https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/$FILE\\n        chmod +x /op"
    ],
    [
      0.000060,
      "t/bin/$FILE\\n      else\\n        # we check the version of the binary\\n        INSTALLED_VERSION=$(/opt/bin/$FILE --version)\\n        MATCH=$(echo \\\"${INSTALLED_VERSION}\\\" | grep -c \\\"${K8S_VERSION}\\\")\\n        if [ $MATCH -eq 0 ]; then\\n          # the version is different\\n          curl -sSL -o /opt/bin/$FILE https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/$FILE\\n          chmod +x /opt/bin/$FILE\\n        fi\\n      fi\\n  - path: /opt/bin/scheduler-policy.json\\n    content: |\\n      {\\n          \\\"kind\\\": \\\"Policy\\\",\\n          \\\"apiVersion\\\": \\\"v1\\\",\\n          \\\"predicates\\\": [{\\\"name\\\": \\\"PodFitsPorts\\\"},{\\\"name\\\": \\\"PodFitsResources\\\"},{\\\"name\\\": \\\"NoDiskConflict\\\"},{\\\"name\\\": \\\"MatchNodeSelector\\\"},{\\\"name\\\": \\\"HostName\\\"}],\\n          \\\"priorities\\\": [{\\\"name\\\": \\\"LeastRequestedPriority\\\",\\\"weight\\\": 1},{\\\"name\\\": \\\"BalancedResourceAllocation\\\",\\\"weight\\\": 1},{\\\"name\\\": \\\"ServiceSpreadingPriority\\\",\\\"weight\\\": 2},{\\\"name\\\": \\\"EqualPriority\\\",\\\"weight\\\": 1}]\\n  "
    ],
    [
      0.000055,
      "    }\\n\"\u001b[0m\r\n\u001b[0m\u001b[1mdigitalocean_droplet.deis.1: Creating...\u001b[21m\r\n  backups:              \"\" =\u003e \"0\"\r\n"
    ],
    [
      0.000062,
      "  image:                \"\" =\u003e \"coreos-stable\"\r\n"
    ],
    [
      0.000066,
      "  ipv4_address:         \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000033,
      "  ipv4_address_private: \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000045,
      "  ipv6:                 \"\" =\u003e \"0\"\r\n"
    ],
    [
      0.000054,
      "  ipv6_address:         \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000067,
      "  ipv6_address_private: \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000472,
      "  locked:               \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000039,
      "  name:                 \"\" =\u003e \"deis-sgoings-2\"\r\n"
    ],
    [
      0.000032,
      "  private_networking:   \"\" =\u003e \"1\"\r\n"
    ],
    [
      0.000043,
      "  region:               \"\" =\u003e \"nyc1\"\r\n"
    ],
    [
      0.000056,
      "  size:                 \"\" =\u003e \"8gb\"\r\n"
    ],
    [
      0.000032,
      "  ssh_keys.#:           \"\" =\u003e \"1\"\r\n"
    ],
    [
      0.000077,
      "  ssh_keys.0:           \"\" =\u003e \"02:81:cf:41:d0:7e:c2:4f:af:62:02:96:f2:11:59:b9\"\r\n"
    ],
    [
      0.000045,
      "  status:               \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.011385,
      "  user_data:            \"\" =\u003e \"#cloud-config\\n\\ncoreos:\\n  etcd2:\\n    # generate a new token for each unique cluster from https://discovery.etcd.io/new\\n    discovery: https://discovery.etcd.io/76485919568ca1b29a4e76bbd8e25d32\\n    # multi-region and multi-cloud deployments need to use $public_ipv4\\n    advertise-client-urls: http://$private_ipv4:2379\\n    initial-advertise-peer-urls: http://$private_ipv4:2380\\n    # listen on both the official ports and the legacy ports\\n    # legacy ports can be omitted if your application doesn't depend on them\\n    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001\\n    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001\\n    data-dir: /var/lib/etcd2\\n  fleet:\\n    public-ip: $public_ipv4\\n    metadata: controlPlane=true,dataPlane=true,routerMesh=true\\n  update:\\n    reboot-strategy: \\\"off\\\"\\n  units:\\n    - name: etcd.service\\n      mask: true\\n    - name: etcd2.service\\n      command: start\\n    - name: fleet.service\\n      command: start\\n  "
    ],
    [
      0.000032,
      "  - name: docker-tcp.socket\\n      command: start\\n      enable: true\\n      content: |\\n        [Unit]\\n        Description=Docker Socket for the API\\n\\n        [Socket]\\n        ListenStream=2375\\n        Service=docker.service\\n        BindIPv6Only=both\\n\\n        [Install]\\n        WantedBy=sockets.target\\n    - name: update-engine.service\\n      command: stop\\n      enable: false\\n    - name: docker.service\\n      drop-ins:\\n      - name: 50-insecure-registry.conf\\n        content: |\\n          [Service]\\n          Environment=\\\"DOCKER_OPTS=--insecure-registry 10.0.0.0/8 --insecure-registry 172.16.0.0/12 --insecure-registry 192.168.0.0/16 --insecure-registry 100.64.0.0/10\\\"\\n    - name: flanneld.service\\n      drop-ins:\\n      - name: 50-network-config.conf\\n        content: |\\n          [Service]\\n          ExecStartPre=/usr/bin/etcdctl mk /coreos.com/network/config '{\\\"Network\\\": \\\"10.244.0.0/16\\\", \\\"SubnetLen\\\": 24, \\\"SubnetMin\\\": \\\"10.244.0.0\\\", \\\"Backend\\\": {\\\"Type\\\": \\\"vxlan\\\"}}'\\n    - name: grace"
    ],
    [
      0.018883,
      "ful-deis-shutdown.service\\n      content: |\\n        [Unit]\\n        Description=Clean up\\n        DefaultDependencies=no\\n        After=fleet.service etcd2.service docker.service docker.socket deis-store-admin.service deis-store-daemon.service deis-store-volume.service deis-store-monitor.service\\n        Requires=fleet.service etcd2.service deis-store-admin.service deis-store-daemon.service deis-store-volume.service docker.service docker.socket deis-store-monitor.service\\n\\n        [Install]\\n        WantedBy=shutdown.target halt.target reboot.target\\n\\n        [Service]\\n        ExecStop=/opt/bin/graceful-shutdown.sh --really\\n        Type=oneshot\\n        TimeoutSec=1200\\n        RemainAfterExit=yes\\n    - name: install-deisctl.service\\n      command: start\\n      content: |\\n        [Unit]\\n        Description=Install deisctl utility\\n        ConditionPathExists=!/opt/bin/deisctl\\n\\n        [Service]\\n        Type=oneshot\\n        ExecStart=/usr/bin/sh -c 'curl -sSL --retry 5 --retry-delay 2 http://deis.i"
    ],
    [
      0.000058,
      "o/deisctl/install.sh | sh -s 1.11.1'\\n    - name: debug-etcd.service\\n      content: |\\n        [Unit]\\n        Description=etcd debugging service\\n\\n        [Service]\\n        ExecStartPre=/usr/bin/curl -sSL -o /opt/bin/jq http://stedolan.github.io/jq/download/linux64/jq\\n        ExecStartPre=/usr/bin/chmod +x /opt/bin/jq\\n        ExecStart=/usr/bin/bash -c \\\"while true; do curl -sL http://127.0.0.1:4001/v2/stats/self | /opt/bin/jq . ; sleep 1 ; done\\\"\\n    - name: increase-nf_conntrack-connections.service\\n      command: start\\n      content: |\\n        [Unit]\\n        Description=Increase the number of connections in nf_conntrack. default is 65536\\n\\n        [Service]\\n        Type=oneshot\\n        ExecStartPre=/usr/sbin/modprobe nf_conntrack\\n        ExecStart=/bin/sh -c \\\"sysctl -w net.netfilter.nf_conntrack_max=262144\\\"\\nwrite_files:\\n  - path: /etc/deis-release\\n    content: |\\n      DEIS_RELEASE=v1.11.1\\n  - path: /etc/motd\\n    content: \\\" \\\\e[31m* *    \\\\e[34m*   \\\\e[32m*****    \\\\e[39mddddd   eeeee"
    ],
    [
      0.000056,
      "ee iiiiiii   ssss\\\\n\\\\e[31m*   *  \\\\e[34m* *  \\\\e[32m*   *     \\\\e[39md   d   e    e    i     s    s\\\\n \\\\e[31m* *  \\\\e[34m***** \\\\e[32m*****     \\\\e[39md    d  e         i    s\\\\n\\\\e[32m*****  \\\\e[31m* *    \\\\e[34m*       \\\\e[39md     d e         i     s\\\\n\\\\e[32m*   * \\\\e[31m*   *  \\\\e[34m* *      \\\\e[39md     d eee       i      sss\\\\n\\\\e[32m*****  \\\\e[31m* *  \\\\e[34m*****     \\\\e[39md     d e         i         s\\\\n  \\\\e[34m*   \\\\e[32m*****  \\\\e[31m* *      \\\\e[39md    d  e         i          s\\\\n \\\\e[34m* *  \\\\e[32m*   * \\\\e[31m*   *     \\\\e[39md   d   e    e    i    s    s\\\\n\\\\e[34m***** \\\\e[32m*****  \\\\e[31m* *     \\\\e[39mddddd   eeeeeee iiiiiii  ssss\\\\n\\\\n\\\\e[39mWelcome to Deis\\\\t\\\\t\\\\tPowered by Core\\\\e[38;5;45mO\\\\e[38;5;206mS\\\\e[39m\\\\n\\\"\\n  - path: /etc/profile.d/nse-function.sh\\n    permissions: '0755'\\n    content: |\\n      function nse() {\\n        docker exec -it $1 bash\\n      }\\n  - path: /run/deis/bin/get_image\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/env bash\\n      # usage: "
    ],
    [
      0.000073,
      "get_image \u003ccomponent_path\u003e\\n      IMAGE=`etcdctl get $1/image 2\u003e/dev/null`\\n\\n      # if no image was set in etcd, we use the default plus the release string\\n      if [ $? -ne 0 ]; then\\n        RELEASE=`etcdctl get /deis/platform/version 2\u003e/dev/null`\\n\\n        # if no release was set in etcd, use the default provisioned with the server\\n        if [ $? -ne 0 ]; then\\n          source /etc/deis-release\\n          RELEASE=$DEIS_RELEASE\\n        fi\\n\\n        IMAGE=$1:$RELEASE\\n      fi\\n\\n      # remove leading slash\\n      echo ${IMAGE#/}\\n  - path: /run/deis/bin/preseed\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/env bash\\n\\n      COMPONENTS=(builder controller database logger logspout publisher registry router store-daemon store-gateway store-metadata store-monitor)\\n      for c in \\\"${COMPONENTS[@]}\\\"; do\\n        image=`/run/deis/bin/get_image /deis/$c`\\n        docker history $image \u003e/dev/null 2\u003e\u00261 || docker pull $image\\n      done\\n  - path: /opt/bin/deis-debug-logs\\n    permissions: '0"
    ],
    [
      0.000086,
      "755'\\n    content: |\\n      #!/usr/bin/env bash\\n\\n      echo '--- VERSIONS ---'\\n      source /etc/os-release\\n      echo $PRETTY_NAME\\n      source /etc/deis-release\\n      echo \\\"Deis $DEIS_RELEASE\\\"\\n      etcd2 -version | head -n1\\n      fleet -version\\n      printf \\\"\\\\n\\\"\\n\\n      echo '--- SYSTEM STATUS ---'\\n      journalctl -n 50 -u etcd --no-pager\\n      journalctl -n 50 -u fleet --no-pager\\n      printf \\\"\\\\n\\\"\\n\\n      echo '--- DEIS STATUS ---'\\n      deisctl list\\n      etcdctl ls --recursive /deis\\n      printf \\\"\\\\n\\\"\\n  - path: /home/core/.toolboxrc\\n    owner: core\\n    content: |\\n      TOOLBOX_DOCKER_IMAGE=alpine\\n      TOOLBOX_DOCKER_TAG=3.1\\n      TOOLBOX_USER=root\\n  - path: /etc/environment_proxy\\n    owner: core\\n    content: |\\n      HTTP_PROXY=\\n      HTTPS_PROXY=\\n      ALL_PROXY=\\n      NO_PROXY=\\n      http_proxy=\\n      https_proxy=\\n      all_proxy=\\n      no_proxy=\\n  - path: /etc/systemd/coredump.conf\\n    content: |\\n      [Coredump]\\n      Storage=none\\n  - path: /opt/bin/"
    ],
    [
      0.000080,
      "graceful-shutdown.sh\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/bash\\n      if [ \\\"$1\\\" != '--really' ]; then\\n        echo \\\"command must be run as: $0 --really\\\"\\n        exit 1\\n      fi\\n      # procedure requires the store-admin\\n      ADMIN_RUNNING=$(docker inspect --format=\\\"{{ .State.Running }}\\\" deis-store-admin)\\n      if [ $? -eq 1 ] || [ \\\"$ADMIN_RUNNING\\\" == \\\"false\\\" ]; then\\n        echo \\\"deis-store-admin container is required for graceful shutdown\\\"\\n        exit 2\\n      fi\\n      set -e -x -o pipefail\\n      # determine osd id\\n      CURRENT_STATUS=$(docker exec deis-store-admin ceph health | awk '{print $1}')\\n      OSD_HOSTS=($(etcdctl ls /deis/store/hosts/| awk -F'/' '{print $5}'))\\n      for HOST in \\\"${OSD_HOSTS[@]}\\\"\\n      do\\n        PUBLIC_IP=$(fleetctl list-machines -fields=\\\"machine,ip\\\" -full -no-legend| grep `cat /etc/machine-id` | awk '{print $2}')\\n        if [ \\\"$HOST\\\" = \\\"$PUBLIC_IP\\\" ] ; then\\n          OSD_ID=$(etcdctl get /deis/store/osds/$PUBLIC_IP)\\n  "
    ],
    [
      0.000083,
      "        break\\n        fi\\n      done\\n      # if we own an osd and its healthy, try to gracefully remove it\\n      if [ ! -z \\\"$OSD_ID\\\" ] \u0026\u0026 [[ \\\"$CURRENT_STATUS\\\" == *\\\"HEALTH_OK\\\"* ]] \u0026\u0026 [ ${#OSD_HOSTS[@]} -gt \\\"3\\\" ]; then\\n        docker exec deis-store-admin ceph osd out $OSD_ID\\n        sleep 30\\n        TIMEWAITED=0\\n        until [[ $(docker exec deis-store-admin ceph health) == *\\\"HEALTH_OK\\\"* ]]\\n        do\\n          if [ $TIMEWAITED -gt \\\"1200\\\" ]\\n          then\\n            echo \\\"ceph graceful removal timeout exceeded\\\"\\n            break\\n          fi\\n          echo \\\"waiting\\\" \u0026\u0026 sleep 5\\n          TIMEWAITED=$((TIMEWAITED+5))\\n        done\\n        docker stop deis-store-daemon\\n        docker exec deis-store-admin ceph osd crush remove osd.$OSD_ID\\n        docker exec deis-store-admin ceph auth del osd.$OSD_ID\\n        docker exec deis-store-admin ceph osd rm $OSD_ID\\n        etcdctl rm /deis/store/osds/$PUBLIC_IP\\n        etcdctl rm /deis/store/hosts/$PUBLIC_IP \u0026\u0026 sleep 10\\n        # re"
    ],
    [
      0.000055,
      "move ceph mon\\n        docker stop deis-store-monitor || true\\n        docker exec deis-store-admin ceph mon remove `hostname -f` # fixme\\n        docker stop deis-store-metadata || true\\n      fi\\n\\n      # removing the node from etcd\\n      NODE=$(etcdctl member list | grep `cat /etc/machine-id` | cut -d ':' -f 1)\\n      etcdctl member remove $NODE\\n  - path: /opt/bin/wupiao\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/env bash\\n      # [w]ait [u]ntil [p]ort [i]s [a]ctually [o]pen\\n      [ -n \\\"$1\\\" ] \u0026\u0026 \\\\\\n        until curl -o /dev/null -sIf http://${1}; do \\\\\\n          sleep 1 \u0026\u0026 echo .;\\n        done;\\n      exit $?\\n  - path: /opt/bin/download-k8s-binary\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/env bash\\n      export K8S_VERSION=\\\"v1.0.1\\\"\\n      mkdir -p /opt/bin\\n      FILE=$1\\n      if [ ! -f /opt/bin/$FILE ]; then\\n        curl -sSL -o /opt/bin/$FILE https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/$FILE\\n        chmod +x /op"
    ],
    [
      0.000098,
      "t/bin/$FILE\\n      else\\n        # we check the version of the binary\\n        INSTALLED_VERSION=$(/opt/bin/$FILE --version)\\n        MATCH=$(echo \\\"${INSTALLED_VERSION}\\\" | grep -c \\\"${K8S_VERSION}\\\")\\n        if [ $MATCH -eq 0 ]; then\\n          # the version is different\\n          curl -sSL -o /opt/bin/$FILE https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/$FILE\\n          chmod +x /opt/bin/$FILE\\n        fi\\n      fi\\n  - path: /opt/bin/scheduler-policy.json\\n    content: |\\n      {\\n          \\\"kind\\\": \\\"Policy\\\",\\n          \\\"apiVersion\\\": \\\"v1\\\",\\n          \\\"predicates\\\": [{\\\"name\\\": \\\"PodFitsPorts\\\"},{\\\"name\\\": \\\"PodFitsResources\\\"},{\\\"name\\\": \\\"NoDiskConflict\\\"},{\\\"name\\\": \\\"MatchNodeSelector\\\"},{\\\"name\\\": \\\"HostName\\\"}],\\n          \\\"priorities\\\": [{\\\"name\\\": \\\"LeastRequestedPriority\\\",\\\"weight\\\": 1},{\\\"name\\\": \\\"BalancedResourceAllocation\\\",\\\"weight\\\": 1},{\\\"name\\\": \\\"ServiceSpreadingPriority\\\",\\\"weight\\\": 2},{\\\"name\\\": \\\"EqualPriority\\\",\\\"weight\\\": 1}]\\n  "
    ],
    [
      0.000065,
      "    }\\n\"\u001b[0m\r\n\u001b[0m\u001b[1mdigitalocean_droplet.deis.2: Creating...\u001b[21m\r\n  backups:              \"\" =\u003e \"0\"\r\n"
    ],
    [
      0.000004,
      "  image:                \"\" =\u003e \"coreos-stable\"\r\n"
    ],
    [
      0.000034,
      "  ipv4_address:         \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000017,
      "  ipv4_address_private: \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000028,
      "  ipv6:                 \"\" =\u003e \"0\"\r\n"
    ],
    [
      0.000033,
      "  ipv6_address:         \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000040,
      "  ipv6_address_private: \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000026,
      "  locked:               \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.000046,
      "  name:                 \"\" =\u003e \"deis-sgoings-3\"\r\n"
    ],
    [
      0.000019,
      "  private_networking:   \"\" =\u003e \"1\"\r\n"
    ],
    [
      0.000069,
      "  region:               \"\" =\u003e \"nyc1\"\r\n"
    ],
    [
      0.000024,
      "  size:                 \"\" =\u003e \"8gb\"\r\n"
    ],
    [
      0.000041,
      "  ssh_keys.#:           \"\" =\u003e \"1\"\r\n"
    ],
    [
      0.000062,
      "  ssh_keys.0:           \"\" =\u003e \"02:81:cf:41:d0:7e:c2:4f:af:62:02:96:f2:11:59:b9\"\r\n"
    ],
    [
      0.000041,
      "  status:               \"\" =\u003e \"\u003ccomputed\u003e\"\r\n"
    ],
    [
      0.009748,
      "  user_data:            \"\" =\u003e \"#cloud-config\\n\\ncoreos:\\n  etcd2:\\n    # generate a new token for each unique cluster from https://discovery.etcd.io/new\\n    discovery: https://discovery.etcd.io/76485919568ca1b29a4e76bbd8e25d32\\n    # multi-region and multi-cloud deployments need to use $public_ipv4\\n    advertise-client-urls: http://$private_ipv4:2379\\n    initial-advertise-peer-urls: http://$private_ipv4:2380\\n    # listen on both the official ports and the legacy ports\\n    # legacy ports can be omitted if your application doesn't depend on them\\n    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001\\n    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001\\n    data-dir: /var/lib/etcd2\\n  fleet:\\n    public-ip: $public_ipv4\\n    metadata: controlPlane=true,dataPlane=true,routerMesh=true\\n  update:\\n    reboot-strategy: \\\"off\\\"\\n  units:\\n    - name: etcd.service\\n      mask: true\\n    - name: etcd2.service\\n      command: start\\n    - name: fleet.service\\n      command: start\\n  "
    ],
    [
      0.000041,
      "  - name: docker-tcp.socket\\n      command: start\\n      enable: true\\n      content: |\\n        [Unit]\\n        Description=Docker Socket for the API\\n\\n        [Socket]\\n        ListenStream=2375\\n        Service=docker.service\\n        BindIPv6Only=both\\n\\n        [Install]\\n        WantedBy=sockets.target\\n    - name: update-engine.service\\n      command: stop\\n      enable: false\\n    - name: docker.service\\n      drop-ins:\\n      - name: 50-insecure-registry.conf\\n        content: |\\n          [Service]\\n          Environment=\\\"DOCKER_OPTS=--insecure-registry 10.0.0.0/8 --insecure-registry 172.16.0.0/12 --insecure-registry 192.168.0.0/16 --insecure-registry 100.64.0.0/10\\\"\\n    - name: flanneld.service\\n      drop-ins:\\n      - name: 50-network-config.conf\\n        content: |\\n          [Service]\\n          ExecStartPre=/usr/bin/etcdctl mk /coreos.com/network/config '{\\\"Network\\\": \\\"10.244.0.0/16\\\", \\\"SubnetLen\\\": 24, \\\"SubnetMin\\\": \\\"10.244.0.0\\\", \\\"Backend\\\": {\\\"Type\\\": \\\"vxlan\\\"}}'\\n    - name: grace"
    ],
    [
      0.000126,
      "ful-deis-shutdown.service\\n      content: |\\n        [Unit]\\n        Description=Clean up\\n        DefaultDependencies=no\\n        After=fleet.service etcd2.service docker.service docker.socket deis-store-admin.service deis-store-daemon.service deis-store-volume.service deis-store-monitor.service\\n        Requires=fleet.service etcd2.service deis-store-admin.service deis-store-daemon.service deis-store-volume.service docker.service docker.socket deis-store-monitor.service\\n\\n        [Install]\\n        WantedBy=shutdown.target halt.target reboot.target\\n\\n        [Service]\\n        ExecStop=/opt/bin/graceful-shutdown.sh --really\\n        Type=oneshot\\n        TimeoutSec=1200\\n        RemainAfterExit=yes\\n    - name: install-deisctl.service\\n      command: start\\n      content: |\\n        [Unit]\\n        Description=Install deisctl utility\\n        ConditionPathExists=!/opt/bin/deisctl\\n\\n        [Service]\\n        Type=oneshot\\n        ExecStart=/usr/bin/sh -c 'curl -sSL --retry 5 --retry-delay 2 http://deis.i"
    ],
    [
      0.000077,
      "o/deisctl/install.sh | sh -s 1.11.1'\\n    - name: debug-etcd.service\\n      content: |\\n        [Unit]\\n        Description=etcd debugging service\\n\\n        [Service]\\n        ExecStartPre=/usr/bin/curl -sSL -o /opt/bin/jq http://stedolan.github.io/jq/download/linux64/jq\\n        ExecStartPre=/usr/bin/chmod +x /opt/bin/jq\\n        ExecStart=/usr/bin/bash -c \\\"while true; do curl -sL http://127.0.0.1:4001/v2/stats/self | /opt/bin/jq . ; sleep 1 ; done\\\"\\n    - name: increase-nf_conntrack-connections.service\\n      command: start\\n      content: |\\n        [Unit]\\n        Description=Increase the number of connections in nf_conntrack. default is 65536\\n\\n        [Service]\\n        Type=oneshot\\n        ExecStartPre=/usr/sbin/modprobe nf_conntrack\\n        ExecStart=/bin/sh -c \\\"sysctl -w net.netfilter.nf_conntrack_max=262144\\\"\\nwrite_files:\\n  - path: /etc/deis-release\\n    content: |\\n      DEIS_RELEASE=v1.11.1\\n  - path: /etc/motd\\n    content: \\\" \\\\e[31m* *    \\\\e[34m*   \\\\e[32m*****    \\\\e[39mddddd   eeeee"
    ],
    [
      0.000073,
      "ee iiiiiii   ssss\\\\n\\\\e[31m*   *  \\\\e[34m* *  \\\\e[32m*   *     \\\\e[39md   d   e    e    i     s    s\\\\n \\\\e[31m* *  \\\\e[34m***** \\\\e[32m*****     \\\\e[39md    d  e         i    s\\\\n\\\\e[32m*****  \\\\e[31m* *    \\\\e[34m*       \\\\e[39md     d e         i     s\\\\n\\\\e[32m*   * \\\\e[31m*   *  \\\\e[34m* *      \\\\e[39md     d eee       i      sss\\\\n\\\\e[32m*****  \\\\e[31m* *  \\\\e[34m*****     \\\\e[39md     d e         i         s\\\\n  \\\\e[34m*   \\\\e[32m*****  \\\\e[31m* *      \\\\e[39md    d  e         i          s\\\\n \\\\e[34m* *  \\\\e[32m*   * \\\\e[31m*   *     \\\\e[39md   d   e    e    i    s    s\\\\n\\\\e[34m***** \\\\e[32m*****  \\\\e[31m* *     \\\\e[39mddddd   eeeeeee iiiiiii  ssss\\\\n\\\\n\\\\e[39mWelcome to Deis\\\\t\\\\t\\\\tPowered by Core\\\\e[38;5;45mO\\\\e[38;5;206mS\\\\e[39m\\\\n\\\"\\n  - path: /etc/profile.d/nse-function.sh\\n    permissions: '0755'\\n    content: |\\n      function nse() {\\n        docker exec -it $1 bash\\n      }\\n  - path: /run/deis/bin/get_image\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/env bash\\n      # usage: "
    ],
    [
      0.000051,
      "get_image \u003ccomponent_path\u003e\\n      IMAGE=`etcdctl get $1/image 2\u003e/dev/null`\\n\\n      # if no image was set in etcd, we use the default plus the release string\\n      if [ $? -ne 0 ]; then\\n        RELEASE=`etcdctl get /deis/platform/version 2\u003e/dev/null`\\n\\n        # if no release was set in etcd, use the default provisioned with the server\\n        if [ $? -ne 0 ]; then\\n          source /etc/deis-release\\n          RELEASE=$DEIS_RELEASE\\n        fi\\n\\n        IMAGE=$1:$RELEASE\\n      fi\\n\\n      # remove leading slash\\n      echo ${IMAGE#/}\\n  - path: /run/deis/bin/preseed\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/env bash\\n\\n      COMPONENTS=(builder controller database logger logspout publisher registry router store-daemon store-gateway store-metadata store-monitor)\\n      for c in \\\"${COMPONENTS[@]}\\\"; do\\n        image=`/run/deis/bin/get_image /deis/$c`\\n        docker history $image \u003e/dev/null 2\u003e\u00261 || docker pull $image\\n      done\\n  - path: /opt/bin/deis-debug-logs\\n    permissions: '0"
    ],
    [
      0.000051,
      "755'\\n    content: |\\n      #!/usr/bin/env bash\\n\\n      echo '--- VERSIONS ---'\\n      source /etc/os-release\\n      echo $PRETTY_NAME\\n      source /etc/deis-release\\n      echo \\\"Deis $DEIS_RELEASE\\\"\\n      etcd2 -version | head -n1\\n      fleet -version\\n      printf \\\"\\\\n\\\"\\n\\n      echo '--- SYSTEM STATUS ---'\\n      journalctl -n 50 -u etcd --no-pager\\n      journalctl -n 50 -u fleet --no-pager\\n      printf \\\"\\\\n\\\"\\n\\n      echo '--- DEIS STATUS ---'\\n      deisctl list\\n      etcdctl ls --recursive /deis\\n      printf \\\"\\\\n\\\"\\n  - path: /home/core/.toolboxrc\\n    owner: core\\n    content: |\\n      TOOLBOX_DOCKER_IMAGE=alpine\\n      TOOLBOX_DOCKER_TAG=3.1\\n      TOOLBOX_USER=root\\n  - path: /etc/environment_proxy\\n    owner: core\\n    content: |\\n      HTTP_PROXY=\\n      HTTPS_PROXY=\\n      ALL_PROXY=\\n      NO_PROXY=\\n      http_proxy=\\n      https_proxy=\\n      all_proxy=\\n      no_proxy=\\n  - path: /etc/systemd/coredump.conf\\n    content: |\\n      [Coredump]\\n      Storage=none\\n  - path: /opt/bin/"
    ],
    [
      0.000033,
      "graceful-shutdown.sh\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/bash\\n      if [ \\\"$1\\\" != '--really' ]; then\\n        echo \\\"command must be run as: $0 --really\\\"\\n        exit 1\\n      fi\\n      # procedure requires the store-admin\\n      ADMIN_RUNNING=$(docker inspect --format=\\\"{{ .State.Running }}\\\" deis-store-admin)\\n      if [ $? -eq 1 ] || [ \\\"$ADMIN_RUNNING\\\" == \\\"false\\\" ]; then\\n        echo \\\"deis-store-admin container is required for graceful shutdown\\\"\\n        exit 2\\n      fi\\n      set -e -x -o pipefail\\n      # determine osd id\\n      CURRENT_STATUS=$(docker exec deis-store-admin ceph health | awk '{print $1}')\\n      OSD_HOSTS=($(etcdctl ls /deis/store/hosts/| awk -F'/' '{print $5}'))\\n      for HOST in \\\"${OSD_HOSTS[@]}\\\"\\n      do\\n        PUBLIC_IP=$(fleetctl list-machines -fields=\\\"machine,ip\\\" -full -no-legend| grep `cat /etc/machine-id` | awk '{print $2}')\\n        if [ \\\"$HOST\\\" = \\\"$PUBLIC_IP\\\" ] ; then\\n          OSD_ID=$(etcdctl get /deis/store/osds/$PUBLIC_IP)\\n  "
    ],
    [
      0.000054,
      "        break\\n        fi\\n      done\\n      # if we own an osd and its healthy, try to gracefully remove it\\n      if [ ! -z \\\"$OSD_ID\\\" ] \u0026\u0026 [[ \\\"$CURRENT_STATUS\\\" == *\\\"HEALTH_OK\\\"* ]] \u0026\u0026 [ ${#OSD_HOSTS[@]} -gt \\\"3\\\" ]; then\\n        docker exec deis-store-admin ceph osd out $OSD_ID\\n        sleep 30\\n        TIMEWAITED=0\\n        until [[ $(docker exec deis-store-admin ceph health) == *\\\"HEALTH_OK\\\"* ]]\\n        do\\n          if [ $TIMEWAITED -gt \\\"1200\\\" ]\\n          then\\n            echo \\\"ceph graceful removal timeout exceeded\\\"\\n            break\\n          fi\\n          echo \\\"waiting\\\" \u0026\u0026 sleep 5\\n          TIMEWAITED=$((TIMEWAITED+5))\\n        done\\n        docker stop deis-store-daemon\\n        docker exec deis-store-admin ceph osd crush remove osd.$OSD_ID\\n        docker exec deis-store-admin ceph auth del osd.$OSD_ID\\n        docker exec deis-store-admin ceph osd rm $OSD_ID\\n        etcdctl rm /deis/store/osds/$PUBLIC_IP\\n        etcdctl rm /deis/store/hosts/$PUBLIC_IP \u0026\u0026 sleep 10\\n        # re"
    ],
    [
      0.000064,
      "move ceph mon\\n        docker stop deis-store-monitor || true\\n        docker exec deis-store-admin ceph mon remove `hostname -f` # fixme\\n        docker stop deis-store-metadata || true\\n      fi\\n\\n      # removing the node from etcd\\n      NODE=$(etcdctl member list | grep `cat /etc/machine-id` | cut -d ':' -f 1)\\n      etcdctl member remove $NODE\\n  - path: /opt/bin/wupiao\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/env bash\\n      # [w]ait [u]ntil [p]ort [i]s [a]ctually [o]pen\\n      [ -n \\\"$1\\\" ] \u0026\u0026 \\\\\\n        until curl -o /dev/null -sIf http://${1}; do \\\\\\n          sleep 1 \u0026\u0026 echo .;\\n        done;\\n      exit $?\\n  - path: /opt/bin/download-k8s-binary\\n    permissions: '0755'\\n    content: |\\n      #!/usr/bin/env bash\\n      export K8S_VERSION=\\\"v1.0.1\\\"\\n      mkdir -p /opt/bin\\n      FILE=$1\\n      if [ ! -f /opt/bin/$FILE ]; then\\n        curl -sSL -o /opt/bin/$FILE https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/$FILE\\n        chmod +x /op"
    ],
    [
      0.000048,
      "t/bin/$FILE\\n      else\\n        # we check the version of the binary\\n        INSTALLED_VERSION=$(/opt/bin/$FILE --version)\\n        MATCH=$(echo \\\"${INSTALLED_VERSION}\\\" | grep -c \\\"${K8S_VERSION}\\\")\\n        if [ $MATCH -eq 0 ]; then\\n          # the version is different\\n          curl -sSL -o /opt/bin/$FILE https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/$FILE\\n          chmod +x /opt/bin/$FILE\\n        fi\\n      fi\\n  - path: /opt/bin/scheduler-policy.json\\n    content: |\\n      {\\n          \\\"kind\\\": \\\"Policy\\\",\\n          \\\"apiVersion\\\": \\\"v1\\\",\\n          \\\"predicates\\\": [{\\\"name\\\": \\\"PodFitsPorts\\\"},{\\\"name\\\": \\\"PodFitsResources\\\"},{\\\"name\\\": \\\"NoDiskConflict\\\"},{\\\"name\\\": \\\"MatchNodeSelector\\\"},{\\\"name\\\": \\\"HostName\\\"}],\\n          \\\"priorities\\\": [{\\\"name\\\": \\\"LeastRequestedPriority\\\",\\\"weight\\\": 1},{\\\"name\\\": \\\"BalancedResourceAllocation\\\",\\\"weight\\\": 1},{\\\"name\\\": \\\"ServiceSpreadingPriority\\\",\\\"weight\\\": 2},{\\\"name\\\": \\\"EqualPriority\\\",\\\"weight\\\": 1}]\\n  "
    ],
    [
      0.000037,
      "    }\\n\"\u001b[0m\r\n"
    ],
    [
      1.000000,
      "\u001b[0m\u001b[1mdigitalocean_droplet.deis.0: Creation complete\u001b[21m\u001b[0m\r\n"
    ],
    [
      1.000000,
      "\u001b[0m\u001b[1mdigitalocean_droplet.deis.1: Creation complete\u001b[21m\u001b[0m\r\n"
    ],
    [
      1.000000,
      "\u001b[0m\u001b[1mdigitalocean_droplet.deis.2: Creation complete\u001b[21m\u001b[0m\r\n"
    ],
    [
      0.008923,
      "\u001b[0m\u001b[1m\u001b[32m\r\n"
    ],
    [
      0.000566,
      "Apply complete! Resources: 3 added, 0 changed, 0 destroyed.\u001b[0m\r\n\u001b[0m\r\n"
    ],
    [
      0.000065,
      "The state of your infrastructure has been saved to the path\r\n"
    ],
    [
      0.000128,
      "below. This state is required to modify and destroy your\r\n"
    ],
    [
      0.000107,
      "infrastructure, so keep it safe. To inspect the complete state\r\n"
    ],
    [
      0.000090,
      "use the `terraform show` command.\r\n\r\n"
    ],
    [
      0.000101,
      "State path: /var/folders/x0/kfykhfkn6g3_44kf6k_0sb2w0000gn/T/otto-tf508722437/state\u001b[0m\r\n"
    ],
    [
      0.000004,
      "\u001b[0m\u001b[1m\u001b[32m\r\n"
    ],
    [
      0.000070,
      "Outputs:\r\n\r\n"
    ],
    [
      0.000085,
      "  hosts = 192.241.156.23, 192.241.155.16, 198.199.85.74\r\n  ip    = 192.241.156.23\u001b[0m\r\n"
    ],
    [
      0.003300,
      "\u001b[0m\u001b[0m\r\n"
    ],
    [
      0.005469,
      "\u001b[0m\u001b[1m==\u003e Terraform execution complete. Saving results...\u001b[0m\r\n"
    ],
    [
      0.013955,
      "\u001b[0m\u001b[1m==\u003e Building infrastructure for foundation: deis\u001b[0m\r\n"
    ],
    [
      0.001589,
      "DEISCTL_TUNNEL is 192.241.156.23\r\n"
    ],
    [
      1.000000,
      "Error: failed initializing SSH client: timed out while initiating SSH connection\r\n"
    ],
    [
      0.001206,
      "\u001b[0m\u001b[0m\r\n"
    ],
    [
      1.000000,
      "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcThiT1BmZTl4N0xZRU9aYUxZZ3ZBZkxIaEZBMy94QTRSbURqcG5SZGxtZVlQSlVjClEyV0wza1dZWHlzRWQvUVlZYk9pZnVSTHpvUTdvOFo2aXUwZEJVR2IxRjFVMEtGcDRMTER4MURjekZPSEw3WVgKM0FneG1PYkVLekpYbnBDa2pJSS9zbDZuTWlnMjJaKzA3Ym0vYUxsTEFlVXV0eEJsMXJETlBWc0dsMHh4bSthUQpwN3ZXOSsvU2c2bXhHRm13SGJOTW1wMzNoN2xmay9POGRpV1pLUTlvWWlDYWY0MmxScTJmSDR3RGcxZll5WXJ6ClFaUnNSREZXbEorK2N5ajc4SU5LVVRYY01XejNJMEU2SnlET1VLMk9FeEpKQis3cExaRWdWMlozNW1WZ1ljdXoKKytwRkhCaFhHSFFGWW5VamR6bE94ZWkyK0MxaEhpcHdQbFJENndJREFRQUJBb0lCQUZQU1UxblJ4bjNvTzU4agppT1duQ3FrOHV6ZEpuY21OTktqREp0TlcvVVFqa1JvZStRZTZTYUpRKzZXVTdEMU1rNGs1aXhXNGVYVncrVmxWCnhQNTk3aWRlZUpnTVl4TGJjVHNBZ0tDR1NQZzcyai9oNzRxalJQQ0R5ejM0OXVDZFhHNWtNSWp0djFDdVp2V1QKQlVycjFRZFpROHpNOVJySG1hcEY1Q0VJaGhMVm9lM2N1NWN5Tmg5cXhlZUExQUxrTkt0U1ZaM2xSeVhYb2JJcApoQnNHWkU1WGxuNzZkNXE3SU5BSWw1aXBydDB6OHlNWURsTFZ1QXR6ZHNQbDZTWnVlS0VCbEJ1M2JKQVFKVlE3CnEvYkduNVl5bUdHQ1FxVEYrLytBeXd5aHRRWklJYTVwVE9rZDd2eURHZ0hkbEoxb3JSbDJJeGMxRVp2YmFrNGoKNWxlQk9jRUNnWUVBMTVjYnBrczZz"
    ],
    [
      0.000042,
      "Unc5TkYwZWtlQkc2WlZ1QUJ5NzZjUzhUMlRVb2lTOW9JemN0L1Q5VEFYagptTURMWVVMVDVKTDFIQ1RBSVZOcjgzTVd4Y2N0YlVJVkxtY3l0ei94d2o3bTNWVUQwUFFvQUpLWDBFWUxITVR1CmV6Ty9SNjJJZStMN05QZE92dVB4WjQ0VU9EeVVIcjZwWlMxZHRuQ2dRL2FyMW9nRWw4ZTgwek1DZ1lFQXkvbFgKRm1PeHpzaGg2ckV6UTA3T1Njay9UYlRtK2ZyNElzWDVYWFdxTWFIRk5MNlcwR2NpZ3drbmtXUnhHckJ6Z3oxUApYeDJNSUk5dlJkbEozaE8zMFNCMnExdzZobTl0b0ZuR2JFa1R0cTU1UlY5dk5HY05HblNzbGkyNE1BT1F5VGpsCnMwWHVHeHdTZWpSSkFMWlRPMStqTkJGVjA3c2VLbnRrdXFBWHpHa0NnWUEreUMxd0h1WkhuMjZmYWlLMTNuY28KSExEODdXRTNzV2daUXNhOU5TL1hxazI0Y0dxM0VkdjJwdVpUTzQvVE40eVRsb3d3NkVjK2pSeHJtaFk3aEF3QgpDR0ozaFBLVlc1WUZqSFZoQzBqKzZiRzJJRCtxTUJzMjI1bnZlTFNQUjBsYVlrNlhQbkFWZFFXa1h0ZlBvRHhhClQzekQzVVorcEQza2FwWFQwWUhHaXdLQmdGNzBZMXRUNjlsMHBVaXBWMUQxSmNscHUyT0VYS1p3OUFUVUh1TW8KUEtQQVNGcm1nclRmM2t3Yi9lU01XcTd2QjhkSHltUmdEL1MwY1R1V0RQSXFRYjlFR3BwcFpBRmpiQ2hpd3FGMApYNDRDcVFmbmhwQmhqTk1ORDY4Vjk1RzZoek4xbmxFWHMrSEE3c1VmQkFFbDM1ZGJUVkdXNUZxZDJFdzBoMDd0CjZrWkpBb0dCQUlMc1JDNlBpRXRsb0hPR0xLY1dmdDgzQzFTeUR2U0xEckxNMFRmMDlDNVhScnVQcVJ4eXNhQnMKbmFVeW1wdTZP"
    ],
    [
      0.000155,
      "K0xkcTVSeDZ0Z1JFNlVHR3RKTEhBSzJ5N3JmaWZJNFNEaVV4Q2cwYXRqbXljOVZLbm9JOFR4Swo2aFA0ZFU1L1B6R3NUTi9DaElFUmwrWGFETUJuOU9za1VNZWpUeHN6WlU4bHN1UEc4QnFzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==\r\n\u001b[0m\u001b[0m\r\n"
    ],
    [
      1.000000,
      "goings.space\r\n"
    ],
    [
      0.001946,
      "\u001b[0m\u001b[0m\r\n"
    ],
    [
      1.000000,
      "\u001b[31m● \u001b[34m▴ \u001b[32m■\u001b[0m\r\n"
    ],
    [
      0.000106,
      "\u001b[32m■ \u001b[31m● \u001b[34m▴\u001b[0m Installing Deis...\r\n"
    ],
    [
      0.000007,
      "\u001b[34m▴ \u001b[32m■ \u001b[31m●\u001b[0m\r\n"
    ],
    [
      0.000017,
      "Storage subsystem...\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-daemon.service:\u001b[0m loaded\r\n"
    ],
    [
      0.061782,
      "\u001b[0;33mdeis-store-volume.service:\u001b[0m loaded\r\n"
    ],
    [
      0.058964,
      "\u001b[0;33mdeis-store-monitor.service:\u001b[0m loaded\r\n"
    ],
    [
      0.176907,
      "\u001b[0;33mdeis-store-metadata.service:\u001b[0m loaded\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-gateway@1.service:\u001b[0m loaded\r\n"
    ],
    [
      0.000015,
      "Logging subsystem...\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-logspout.service:\u001b[0m loaded\r\n"
    ],
    [
      0.564603,
      "\u001b[0;33mdeis-logger.service:\u001b[0m loaded\r\n"
    ],
    [
      0.000007,
      "Control plane...\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-registry@1.service:\u001b[0m loaded\r\n"
    ],
    [
      0.031484,
      "\u001b[0;33mdeis-builder.service:\u001b[0m loaded\r\n"
    ],
    [
      0.857980,
      "\u001b[0;33mdeis-database.service:\u001b[0m loaded\r\n"
    ],
    [
      0.059846,
      "\u001b[0;33mdeis-controller.service:\u001b[0m loaded\r\n"
    ],
    [
      0.000006,
      "Data plane...\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-publisher.service:\u001b[0m loaded\r\n"
    ],
    [
      0.000007,
      "Router mesh...\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-router@1.service:\u001b[0m loaded\r\n"
    ],
    [
      0.379959,
      "\u001b[0;33mdeis-router@2.service:\u001b[0m loaded\r\n"
    ],
    [
      0.254613,
      "\u001b[0;33mdeis-router@3.service:\u001b[0m loaded\r\n"
    ],
    [
      0.000010,
      "Done.\r\n"
    ],
    [
      0.000075,
      "\r\n"
    ],
    [
      0.000029,
      "Please run `deisctl start platform` to boot up Deis.\r\n"
    ],
    [
      0.001799,
      "\u001b[0m\u001b[0m\r\n"
    ],
    [
      1.000000,
      "\u001b[31m● \u001b[34m▴ \u001b[32m■\u001b[0m\r\n"
    ],
    [
      0.000024,
      "\u001b[32m■ \u001b[31m● \u001b[34m▴\u001b[0m Starting Deis...\r\n"
    ],
    [
      0.000057,
      "\u001b[34m▴ \u001b[32m■ \u001b[31m●\u001b[0m\r\n"
    ],
    [
      0.000004,
      "Storage subsystem...\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-monitor.service:\u001b[0m activating/start-pre                     \r"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-monitor.service:\u001b[0m active/running                           \r\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-daemon.service:\u001b[0m activating/start-pre                      \r"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-daemon.service:\u001b[0m active/running                            \r\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-metadata.service:\u001b[0m activating/start-pre                    \r"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-metadata.service:\u001b[0m active/running                          \r\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-gateway@1.service:\u001b[0m activating/start-pre                   \r"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-gateway@1.service:\u001b[0m activating/start-post                  \r"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-gateway@1.service:\u001b[0m active/running                         \r\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-volume.service:\u001b[0m activating/start-pre                      \r"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-store-volume.service:\u001b[0m active/running                            \r\r\n"
    ],
    [
      0.000010,
      "Logging subsystem...\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-logger.service:\u001b[0m activating/start-pre                            \r"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-logger.service:\u001b[0m active/running                                  \r\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-logspout.service:\u001b[0m activating/start-pre                          \r"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-logspout.service:\u001b[0m activating/auto-restart                       \r"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-logspout.service:\u001b[0m active/running                                \r\r\n"
    ],
    [
      1.000000,
      "Control plane...\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-database.service:\u001b[0m activating/start-pre                          \r"
    ],
    [
      0.414730,
      "\u001b[0;33mdeis-registry@1.service:\u001b[0m activating/start-pre                        \r"
    ],
    [
      0.306640,
      "\u001b[0;33mdeis-controller.service:\u001b[0m activating/start-pre                        \r"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-database.service:\u001b[0m active/running                                \r\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-registry@1.service:\u001b[0m active/running                              \r\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-controller.service:\u001b[0m active/running                              \r\r\n"
    ],
    [
      0.263980,
      "\u001b[0;33mdeis-builder.service:\u001b[0m activating/start-pre                           \r"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-builder.service:\u001b[0m activating/start-post                          \r"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-builder.service:\u001b[0m active/running                                 \r\r\n"
    ],
    [
      0.000007,
      "Data plane...\r\n"
    ],
    [
      0.185598,
      "\u001b[0;33mdeis-publisher.service:\u001b[0m active/running                               \r\r\n"
    ],
    [
      0.000036,
      "Router mesh...\r\n"
    ],
    [
      1.000000,
      "\u001b[0;33mdeis-router@1.service:\u001b[0m active/running                                \r\r\n"
    ],
    [
      0.057373,
      "\u001b[0;33mdeis-router@3.service:\u001b[0m active/running                                \r\r\n"
    ],
    [
      0.059344,
      "\u001b[0;33mdeis-router@2.service:\u001b[0m active/running                                \r\r\n"
    ],
    [
      0.000006,
      "Done.\r\n"
    ],
    [
      0.000054,
      " \r\n"
    ],
    [
      0.000068,
      "Please set up an administrative account. See 'deis help register'\r\n"
    ],
    [
      0.001985,
      "\u001b[0m\u001b[0m\r\n"
    ],
    [
      0.000055,
      "\u001b[0m\u001b[32m\u001b[1m==\u003e \u001b[32mInfrastructure successfully created!\u001b[0m\r\n"
    ],
    [
      0.000061,
      "\u001b[0m\u001b[32m    \u001b[32mThe infrastructure necessary to deploy this application\r\n"
    ],
    [
      0.000060,
      "    is now available. You can now deploy using `otto deploy`.\u001b[0m\r\n"
    ]
  ]
}